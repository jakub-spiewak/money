name: Build, publish and run docker images on the server

on:
  push:
    branches: [ master ]

jobs:
  ui-build-and-publish-docker-image:
    name: UI - Build and push docker image
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Github Packages
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push docker image to Github Packages
        uses: docker/build-push-action@v2
        with:
          context: ./ui
          file: ./ui/docker/Dockerfile
          tags: ghcr.io/jakub-spiewak/money/ui:latest
          push: true

      - name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}

  server-build-and-publish-docker-image:
    name: Server - Build and push docker image
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Java
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'adopt'

      - name: Build and push docker image to Github Packages
        uses: gradle/gradle-build-action@v2
        env:
          CI: true
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          arguments: bootBuildImage -PpublishImage=true
          build-root-directory: ./server

  pull-newest-image-on-server-and-run:
    name: Pull and run the newest images on server
    runs-on: ubuntu-latest
    needs:
      - server-build-and-publish-docker-image
      - ui-build-and-publish-docker-image

    steps:
      - name: Pull and run the newest docker images via ssh
        uses: appleboy/ssh-action@master
        with:
          host: jakubspiewak.com
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_KEY }}
          script: |
            cd money
            docker-compose -f docker-compose-prod.yml stop
            docker-compose -f docker-compose-prod.yml up --force-recreate --build -d
            docker image prune -af

